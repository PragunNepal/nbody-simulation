from setuptools import setup, Extension
import numpy
import os
import glob
from pathlib import Path

def find_c_files():
    """Find all C source files for the extension."""
    c_files_dir = Path("src/nbody/_nbody_c")
    c_files = []
    
    # Add the wrapper file first
    wrapper_file = c_files_dir / "nbody_wrapper.c"
    if wrapper_file.exists():
        c_files.append(str(wrapper_file))
    
    # Add all your original C files (excluding the wrapper)
    original_files = [
        "nbody_comp.c",
        "nbody_funcs.c", 
        "allotarrays.c",
        "funcs.c",
        "powerspec.c",
        "tf_fit.c"
    ]
    
    for c_file in original_files:
        file_path = c_files_dir / c_file
        if file_path.exists():
            c_files.append(str(file_path))
        else:
            print(f"Warning: {c_file} not found")
    
    return c_files

def get_fftw_paths():
    """Get FFTW static library paths."""
    base_dir = Path("src/nbody/_nbody_c/fftw_static")
    
    include_dir = base_dir / "include"
    lib_dir = base_dir / "lib"
    
    # Your specific FFTW library files
    fftw_libs = []
    required_libs = ["libfftw3.a", "libfftw3_omp.a", "libfftw3_threads.a"]
    
    for lib_name in required_libs:
        lib_file = lib_dir / lib_name
        if lib_file.exists():
            fftw_libs.append(str(lib_file.absolute()))
        else:
            print(f"Warning: {lib_name} not found at {lib_file}")
    
    return str(include_dir.absolute()), str(lib_dir.absolute()), fftw_libs

# Get file paths
source_files = find_c_files()
fftw_include_dir, fftw_lib_dir, fftw_static_libs = get_fftw_paths()

print("Building N-body simulation C extension...")
print(f"Source files: {source_files}")
print(f"FFTW include: {fftw_include_dir}")
print(f"FFTW libraries: {fftw_static_libs}")

# Check that we have the required files
if not source_files:
    raise RuntimeError("No C source files found!")
if not fftw_static_libs:
    raise RuntimeError("No FFTW static libraries found!")

# Define the extension module (matching your original Makefile)
ext_modules = [
    Extension(
        name="nbody._nbody_c",
        sources=source_files,
        include_dirs=[
            numpy.get_include(),
            fftw_include_dir,
            "src/nbody/_nbody_c",
        ],
        library_dirs=[fftw_lib_dir],
        
        # Compiler flags (based on your original Makefile)
        extra_compile_args=[
            "-fopenmp",         # OpenMP support (from your Makefile)
            "-O3",              # Optimization
            "-std=c99",         # C99 standard
            "-Wall",            # Show warnings
            "-Wno-unused-variable",  # Suppress unused variable warnings
            "-Wno-unused-function",  # Suppress unused function warnings
        ],
        
        # Linker flags (based on your Makefile: -fopenmp -lfftw3f_omp -lfftw3f -lm)
        extra_link_args=fftw_static_libs + [
            "-fopenmp",         # OpenMP linking
            "-lm",              # Math library
            "-lpthread",        # Pthread support for FFTW threads
        ],
        
        language="c",
        define_macros=[
            ("NPY_NO_DEPRECATED_API", "NPY_1_7_API_VERSION"),
        ],
    )
]

# Setup configuration
setup(
    ext_modules=ext_modules,
    zip_safe=False,  # Don't zip - C extensions need files
)
