name: Build Cross-Platform Wheels

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]  # Include Intel and ARM macOS

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        # Build for Python 3.9-3.12
        CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
        
        # Skip problematic builds
        CIBW_SKIP: "*-win32 *-manylinux_i686 pp*"
        
        # Platform-specific configurations
        CIBW_BEFORE_ALL_LINUX: |
          yum install -y gcc gcc-c++ make || (apt-get update && apt-get install -y gcc g++ make)
          
        CIBW_BEFORE_ALL_MACOS: |
          brew install libomp gcc
          
        CIBW_BEFORE_ALL_WINDOWS: |
          choco install mingw --no-progress --yes
          
        # Platform-specific environment variables
        CIBW_ENVIRONMENT_LINUX: >
          CC=gcc
          CXX=g++
          
        CIBW_ENVIRONMENT_MACOS: >
          CC=gcc-13
          CXX=g++-13
          CPPFLAGS=-I/usr/local/include
          LDFLAGS=-L/usr/local/lib
          
        CIBW_ENVIRONMENT_WINDOWS: >
          CC=gcc
          CXX=g++
          
        # Test the built wheels
        CIBW_TEST_COMMAND: python -c "import nbody; print('Import successful')"

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  create_release:
    name: Create Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: "*"
        path: dist
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
