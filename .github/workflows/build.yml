# Alternative: Create the file with all content in one command
cat > .github/workflows/build.yml << 'EOF'
name: Build and distribute

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.2
      env:
        # Configure which Python versions to build for
        CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
        # Skip 32-bit builds
        CIBW_SKIP: "*-win32 *-manylinux_i686"
        
        # Install system dependencies for different platforms
        CIBW_BEFORE_ALL_LINUX: |
          yum install -y gcc gcc-gfortran make
        CIBW_BEFORE_ALL_MACOS: |
          brew install gcc make
        CIBW_BEFORE_ALL_WINDOWS: |
          choco install mingw

        # Set environment variables for compilation
        CIBW_ENVIRONMENT: |
          CC=gcc
          
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
EOF

